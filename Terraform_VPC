terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "5.31.0"
    }
  }
}

provider "aws" {
  region     = "us-east-2"
  access_key = "*"
  secret_key = "*"
}

resource "aws_vpc" "TerraformVPC" {
  cidr_block = "10.0.0.0/16"
  tags = {
    Name = "prod"
  }
  }

  resource "aws_subnet" "subnet1" {
    vpc_id = aws_vpc.TerraformVPC.id
    cidr_block = "10.0.1.0/24"
    availability_zone = "us-east-2a"
    tags = {
      Name = "prod-subnet"
    }
    
  }

  resource "aws_internet_gateway" "igw" {
  vpc_id = aws_vpc.TerraformVPC.id

  tags = {
    Name = "prodIGW"
  }
}

resource "aws_route_table" "productionrt" {
  vpc_id = aws_vpc.TerraformVPC.id

  route {
    cidr_block = "0.0.0.0/24"
    gateway_id = aws_internet_gateway.igw.id
  }

  route {
    ipv6_cidr_block        = "::/0"
    egress_only_gateway_id = aws_internet_gateway.igw.id
  }

  tags = {
    Name = "prodrt"
  }
}

resource "aws_route_table_association" "prod" {
  subnet_id      = aws_subnet.subnet1.id
  route_table_id = aws_route_table.productionrt.id
}

resource "aws_security_group" "allow_tls" {
  name        = "allow_tls"
  description = "Allow TLS inbound traffic and all outbound traffic"
  vpc_id      = aws_vpc.TerraformVPC.id

  tags = {
    Name = "allow_tls"
  }
}

resource "aws_network_interface" "prodNIC" {
  subnet_id       = aws_subnet.subnet1.id
  private_ips     = ["10.0.1.50"]
  security_groups = [aws_security_group.allow_tls.id]

  #attachment {
    #instance     = aws_instance.test.id
   # device_index = 1
  #}
}

resource "aws_eip" "one" {
  domain                    = "vpc"
  network_interface         = aws_network_interface.prodNIC.id
  associate_with_private_ip = "10.0.1.50"
  depends_on = [ aws_internet_gateway.igw ]
}

resource "aws_instance" "web-server-instance" {
  ami                 = "ami-07d8bd8fbf89bf6dc"
  instance_type       = "t2.micro"
  availability_zone   = "us-east-2a"
  # key_name = 

  network_interface {
    device_index         = 0
    network_interface_id = aws_network_interface.prodNIC.id
  }

      user_data = <<-EOF
                  #!/bin/bash
                  sudo yum update -y
                  sudo yum install apache2 -y
                  sudo systemctl start apach2
                  sudo bash -c echo "your very first web server" > /var/www/html/index.html
    EOF
  tags = {
    Name = "web-server"
  }
}
